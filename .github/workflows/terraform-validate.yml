name: Terraform CI

on:
  pull_request:
    branches: 
      - main
    paths:
      - "oblig2/**"
  workflow_dispatch:
  

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-latest
    environment: dev
    env:
      WORKDIR: "oblig2"
      BACKEND_HCL: "oblig2/shared/backend.hcl"
      TF_INPUT: "false"
      TF_IN_AUTOMATION: "true"
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
          terraform_wrapper: false

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Export ARM_* for Terraform (OIDC)
        run: |
          {
            echo "ARM_USE_OIDC=true"
            echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
            echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}"
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          } >> "$GITHUB_ENV"

      - name: Terraform Format Check
        working-directory: ${{ env.WORKDIR }}/terraform
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        working-directory: ${{ env.WORKDIR }}/terraform
        id: init
        run: |
          terraform init \
            -backend-config="${{ github.workspace }}/${{ env.BACKEND_HCL }}" \
            -backend-config="key=oblig2/dev/terraform.tfstate" \
            -input=false \
            -no-color
      
      - name: Terraform Validate
        working-directory: ${{ env.WORKDIR }}/terraform
        id: validate
        run: terraform validate -no-color